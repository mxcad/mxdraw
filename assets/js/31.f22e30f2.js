(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{583:function(t,e,a){t.exports=a.p+"assets/img/unloadCloud.51a1f4f7.png"},584:function(t,e,a){t.exports=a.p+"assets/img/filedToc.52693985.png"},585:function(t,e,a){t.exports=a.p+"assets/img/startProgram.72c9947b.png"},586:function(t,e,a){t.exports=a.p+"assets/img/selectFiled_1.6c68e231.png"},648:function(t,e,a){"use strict";a.r(e);var s=a(12),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"open-cad-drawing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#open-cad-drawing"}},[t._v("#")]),t._v(" Open CAD drawing")]),t._v(" "),s("p",[t._v("mxdraw.js can not only open the canvas drawing, but also open the CAD drawing for simple preview annotation. In API 'Mx.MxFun.createMxObject()', a property 'cadFile' is provided that can open CAD drawings. Users can set the path of CAD drawings through this property, where the CAD drawings can be read only after the file format is converted with the help of MxDraw cloud graphics development kit. For details, please refer to "),s("a",{attrs:{href:"#%E5%9B%BE%E7%BA%B8%E8%BD%AC%E6%8D%A2"}},[t._v("Drawing conversion")]),t._v("ã€‚")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token special-attr"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token value css language-css"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 80vh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mxcad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dynamic loading of js library core code")]),t._v("\nMx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadCoreCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a control object")]),t._v("\n  Mx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MxFun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createMxObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("canvasId")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mxdraw"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// id of the canvas element")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The converted file is composed of multiple.wgh files, but we only need to get the prefix to access it.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// For example:... /.. /demo/buf/$hhh.dwg we can directly write cadFile: ".. /.. /demo/buf/hhhh.dwg"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Converted file")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cadFile")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../../demo/buf/hhhh.dwg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"drawing-conversion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drawing-conversion"}},[t._v("#")]),t._v(" Drawing conversion")]),t._v(" "),s("p",[t._v("Since CAD drawings can not be directly browsed online, it is necessary to use MxDraw cloud map development kit to convert into a file format that can be browsed online, the specific steps are as follows:")]),t._v(" "),s("p",[t._v("(For more detailed instructions on the use of the development kit, please refer to "),s("a",{attrs:{href:"https://help.mxdraw.com/?pid=32",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mxdraw cloud image documentation"),s("OutboundLink")],1),t._v(")")]),t._v(" "),s("h3",{attrs:{id:"step-1-download-mxdraw-cloud-map-development-kit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-download-mxdraw-cloud-map-development-kit"}},[t._v("#")]),t._v(" # Step 1: Download Mxdraw cloud map development kit")]),t._v(" "),s("p",[t._v("MxDraw cloud map development kit provides the exe program for drawing conversion (support window and linux versions), including a variety of supporting services (such as node back-end development related source code, drawing information extraction and front-end of various sample source code), In the official website to download the latest version of the "),s("a",{attrs:{href:"https://www.mxdraw.com/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mxdraw cloud development kit"),s("OutboundLink")],1),t._v(".\n"),s("img",{attrs:{src:a(583),alt:"Download Mxdraw cloud map development kit"}}),t._v("\nDownload the file directory after the Mxdraw cloud image development package is decompressed:\n"),s("img",{attrs:{src:a(584),alt:"Mxdraw cloud map development package file directory"}})]),t._v(" "),s("h3",{attrs:{id:"the-second-step-calls-mxfileconvert-exe-to-start-the-drawing-conversion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-second-step-calls-mxfileconvert-exe-to-start-the-drawing-conversion"}},[t._v("#")]),t._v(" The second step calls MxFileConvert.exe to start the drawing conversion")]),t._v(" "),s("p",[t._v("Look for the MxFileConvert.exe application in the folder directory where it was extracted and double-click to launch it. The converted target CAD files are converted into multiple dwg files and stored in a folder named buf.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(585),alt:"Start drawing conversion program"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(586),alt:"Select target CAD file 1"}})]),t._v(" "),s("p",[t._v("After the file format is successfully converted, a buf folder containing multiple dwg files is obtained and saved in the directory where the target file is located.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://admin.mxdraw3d.com/images/ueditor/1496380114215243776.png",alt:"the converted drawing file location"}})]),t._v(" "),s("h3",{attrs:{id:"the-third-step-web-rendering-display"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-third-step-web-rendering-display"}},[t._v("#")]),t._v(" The third step web rendering display")]),t._v(" "),s("p",[t._v("We can read CAD drawings through Mx.MxFun.createMxObject.")]),t._v(" "),s("h2",{attrs:{id:"other-conversion-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-conversion-methods"}},[t._v("#")]),t._v(" Other conversion methods")]),t._v(" "),s("h3",{attrs:{id:"windows-system"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-system"}},[t._v("#")]),t._v(" windows system")]),t._v(" "),s("p",[t._v('Open cmd, start the command line to go to the directory where MxFileConvert.exe resides, and then invoke the command: MxFileConvert.exe "C:/test.dwg", where "C:/test.dwg" indicates the location of the target file to be converted. After the call is complete, the drawing conversion is successful only if the command line output \'{"code":0,"message":"ok"}\'. The converted file is saved in the buf folder in the same directory as the target file. Example code is as follows:')]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("MxDrawCloudServer1.0TryVersion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("MxDrawCloudServer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Release\n\nMxFileConvert.exe "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:/test.dwg"')]),t._v("\n\n")])])]),s("h3",{attrs:{id:"linux-system"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-system"}},[t._v("#")]),t._v(" linux system")]),t._v(" "),s("p",[t._v("After finding the development package directory 'Bin\\Linux\\Bin', run the command to copy the file in the directory to the Linux system, and then run the following command to increase the execution permission of the file:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" root\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" *\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -r ./mx /mx\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" /mx/*\n./node mxconvert.js "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".dwg\n")])])]),s("p",[t._v("The converted file is in the Bin\\Linux\\Bin\\buf directory")]),t._v(" "),s("demo",{attrs:{url:t.$withBase("/samples/start/quickStart.html")}})],1)}),[],!1,null,null,null);e.default=n.exports}}]);