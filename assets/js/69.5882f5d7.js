(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{673:function(t,e,a){"use strict";a.r(e);var s=a(12),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("After users browse the marked DWG drawings in the web page, they will be reviewed and commented on the drawings, and the content of the annotations will be saved to the server or the original drawings. Below we will talk about the method of saving the annotation information after browsing the marked DWG drawings online.")]),t._v(" "),a("h2",{attrs:{id:"comments-are-saved-to-the-server-s-database"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comments-are-saved-to-the-server-s-database"}},[t._v("#")]),t._v(" Comments are saved to the server's database")]),t._v(" "),a("p",[t._v("The first way is to pass comments or drawing data in the drawing "),a("a",{attrs:{href:"https://mxcad.github.io/mxdraw_api_docs/classes/MxDrawObject.html#saveMxEntityToJson",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mx.MxFun.getCurrentDraw().saveMxEntityToJson()"),a("OutboundLink")],1),t._v(" method converts the JSON string to the database of the server, and then requests the corresponding comment data when the drawing is opened again. pass "),a("a",{attrs:{href:"https://mxcad.github.io/mxdraw_api_docs/classes/MxDrawObject.html#loadMxEntityFromJson",target:"_blank",rel:"noopener noreferrer"}},[t._v("MxFun.getCurrentDraw().loadMxEntityFromJson()"),a("OutboundLink")],1),t._v("method recovers the corresponding annotation or drawing data directly in the front-end page.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Save comment")]),t._v("\nlocalStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mx-data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Mx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MxFun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentDraw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveMxEntityToJson")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Recover comment")]),t._v("\nMx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MxFun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentDraw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadMxEntityFromJson")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mx-data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"comments-are-saved-to-the-drawing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comments-are-saved-to-the-drawing"}},[t._v("#")]),t._v(" Comments are saved to the drawing")]),t._v(" "),a("p",[t._v("The second method is to save the comments or drawing content on the drawing directly to the drawing, which requires the original drawing of the target drawing to be saved in advance in the server. We provide an application that can save the annotation or drawing content with the target drawing. Here is how to do it:")]),t._v(" "),a("ol",[a("li",[t._v("disposition")])]),t._v(" "),a("p",[t._v("Go to the MxDrawServer directory in "),a("a",{attrs:{href:"https://help.mxdraw.com/?pid=32&keywords=",target:"_blank",rel:"noopener noreferrer"}},[t._v("MxDraw Cloud Graphics Development Kit"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("There is a "),a("code",[t._v("MxINI")]),t._v(" function in the "),a("code",[t._v("ini.js")]),t._v(" file in this directory where the service parameters can be configured:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://admin.mxdraw3d.com/images/ueditor/1602201516373053440.png",alt:"MxDrawServer MxINI 配置截图"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Start the node service")])]),t._v(" "),a("ul",[a("li",[t._v("Windows system:")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://admin.mxdraw3d.com/images/ueditor/1602630025566359552.png",alt:"Windows MxDrawServer 目录截图"}})]),t._v(" "),a("p",[t._v("Double-click the "),a("code",[t._v("start.bat")]),t._v(" file to start the node service")]),t._v(" "),a("ul",[a("li",[t._v("Linux system:")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://admin.mxdraw3d.com/images/ueditor/1602630091471458304.png",alt:"Linux MxDrawServer 目录截图"}})]),t._v(" "),a("p",[t._v("First go to the "),a("code",[t._v("Bin\\Linux\\Bin")]),t._v(" directory to add the execution permission of the file.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" root\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" *\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -r ./mx /mx\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" /mx/*\n")])])]),a("p",[t._v("Then go to the "),a("code",[t._v("Bin\\Linux\\MxDrawServer")]),t._v(" directory and execute the following command.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" root\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" *\n./node app.js\n")])])]),a("p",[t._v("The interface for saving comments to the DWG file is "),a("code",[t._v("savecomment")]),t._v(", with the following parameters:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Save to DWG file"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("savefile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dwg after saving"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("userConvertPath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("You can also refer to the "),a("code",[t._v("MxDrawServer")]),t._v(" project source code to write your own background service.")]),t._v(" "),a("h2",{attrs:{id:"other"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#other"}},[t._v("#")]),t._v(" Other")]),t._v(" "),a("p",[t._v("More services please refer to "),a("a",{attrs:{href:"https://help.mxdraw.com/?pid=115",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dream Cloud map Node.JS service"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);